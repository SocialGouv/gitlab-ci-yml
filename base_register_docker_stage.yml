#
# docker image registration
# these base jobs can be reused to build and publish your docker images
#

.base_docker_image_stage:
  image: docker:28
  services:
    - docker:28-dind

.base_register_docker_stage:
  stage: "Registration"
  extends: .base_docker_image_stage
  script:
    # NOTE(douglasduteil): use echo "$CI_JOB_TOKEN" to remove docker login warning.
    # `WARNING! Using --password via the CLI is insecure. Use --password-stdin`
    - echo "$CI_JOB_TOKEN" | docker login $CI_REGISTRY -u gitlab-ci-token --password-stdin
    - >-
      if [[ -n "${CI_COMMIT_TAG}" ]]; then
        export TAG=$(printf "${CI_COMMIT_TAG}" | sed "s/^v//")
        echo "Register ${CI_COMMIT_TAG} tag as ${TAG}"
      else
        export TAG=$CI_COMMIT_REF_SLUG
        echo "Register ${TAG} branch"
      fi
    #
    # NOTE(douglasduteil): aggressive caching strategy.
    # As we don't know which image is the closest to the one we are registering
    # we pull all the images that can help.
    # From the previous commit, to the current branch or the master branch, the
    # first to be defined will be our cache :)
    - |
      [[ -n "${TRACE}" ]] && set -x

      function set_cache_image() {
        if docker pull ${IMAGE_NAME}:$1; then
          export CACHE_TAG=$1
        fi
      }

      echo ""
      echo "Checking last commit (${CI_COMMIT_BEFORE_SHA}) cache"
      set_cache_image "${CI_COMMIT_BEFORE_SHA}"

      if [[ -z "${CACHE_TAG}" ]]; then
        echo ""
        echo "Checking current branch/tag (${TAG}) cache"
        set_cache_image "${TAG}"
      fi

      if [[ -z "${CACHE_TAG}" ]]; then
        echo ""
        echo "Checking default branch (${CI_DEFAULT_BRANCH}) cache"
        set_cache_image "${CI_DEFAULT_BRANCH}"
      fi

      echo ""
      if [[ -n "${CACHE_TAG}" ]] ; then
        echo "Using ${CACHE_TAG} tag as cache"
      else
        echo "No cache ! Naked build :("
      fi

    - echo "
      docker build
      --cache-from ${IMAGE_NAME}:${CACHE_TAG}
      -t ${IMAGE_NAME}:${CI_COMMIT_SHA}
      -t ${IMAGE_NAME}:${TAG}
      $DOCKER_BUILD_ARGS
      $CONTEXT"
    - docker build
      --cache-from ${IMAGE_NAME}:${CACHE_TAG}
      -t ${IMAGE_NAME}:${CI_COMMIT_SHA}
      -t ${IMAGE_NAME}:${TAG}
      $DOCKER_BUILD_ARGS
      $CONTEXT
    - docker push ${IMAGE_NAME}:${CI_COMMIT_SHA}
    - docker push ${IMAGE_NAME}:${TAG}

.base_register_stage:
  extends: .base_register_docker_stage
