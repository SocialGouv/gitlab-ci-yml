stages:
  - Install
  - Code Quality
  - Registration
  - Deploy
  - Notify Finished Deployment
  - Clean Up

include:
  - /base_azure_db_stage.yml
  - /base_create_namespace_stage.yml
  - /base_delete_useless_k8s_ns_stage.yml
  - /base_deploy_app_chart_stage.yml
  - /base_docker_helm_image_stage.yml
  - /base_docker_kubectl_image_stage.yml
  - /base_notify_github_stage.yml
  - /base_register_stage.yml
  - /base_semantic_release_stage.yml
  - /base_yarn_stage.yml

#

.autodevops_install:
  extends: .base_yarn
Install:
  extends: .autodevops_install

#

.autodevops_lint:
  extends: .base_yarn_script
  except:
    variables:
      - $CODE_QUALITY_DISABLED
  dependencies:
    - Install
  needs:
    - Install
  script:
    - yarn lint
Lint:
  extends: .autodevops_lint

#

.autodevops_test:
  extends: .base_yarn_script
  except:
    variables:
      - $TEST_DISABLED
  dependencies:
    - Install
  needs:
    - Install
  script:
    - yarn test
Test:
  extends: .autodevops_test

#

.autodevops_build:
  extends: .base_yarn_build_next
  dependencies:
    - Install
  needs:
    - Install
Build:
  extends: .autodevops_build

#

.autodevops_release:
  extends: .base_semantic_release_stage
  dependencies: []
  stage: Registration
Release:
  extends: .autodevops_release

#

.autodevops_register_image:
  extends: .base_register_stage
  stage: Registration
  dependencies:
    - Build
  needs:
    - Build
  variables:
    CONTEXT: .
    IMAGE_NAME: $CI_REGISTRY_IMAGE
Register image:
  extends: .autodevops_register_image

#

.autodevops_create_namespace:
  extends: .base_create_namespace_stage
  environment:
    name: ${CI_COMMIT_REF_NAME}-dev
    url: https://${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_ID}.${KUBE_INGRESS_BASE_DOMAIN}
  only:
    refs:
      - branches
  except:
    refs:
      - tags
      - master
Create namespace:
  extends: .autodevops_create_namespace

#

.deploy_app_stage:
  stage: Deploy
  extends: .base_deploy_app_chart_stage
  variables:
    REMOTE_URL: "https://github.com/${CI_PROJECT_PATH}.git"
    K8S_NAMESPACE: $KUBE_NAMESPACE
    REGISTRY: $CI_REGISTRY_IMAGE
    IMAGE_TAG: $CI_COMMIT_SHA
    CONTEXT: ${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}

#

.autodevops_deploy_app_dev:
  extends:
    - .deploy_app_stage
  except:
    refs:
      - tags
      - master
  variables:
    HOST: ${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}
  environment:
    name: ${CI_COMMIT_REF_NAME}-dev
    url: https://${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}
    on_stop: Stop review
Deploy app (dev):
  extends: .autodevops_deploy_app_dev

#

.autodevops_stop_review:
  extends: .base_docker_kubectl_image_stage
  stage: Clean Up
  except:
    refs:
      - tags
      - master
  environment:
    name: ${CI_COMMIT_REF_NAME}-dev
    action: stop
  when: manual
  allow_failure: true
  dependencies: []
  variables:
    GIT_STRATEGY: none
  script:
    - echo "kubectl delete namespace ${KUBE_NAMESPACE}"
    - kubectl delete namespace "${KUBE_NAMESPACE}"
Stop review:
  extends: .autodevops_stop_review

#

.autodevops_deploy_app_prod:
  extends:
    - .deploy_app_stage
  only:
    refs:
      - master
  variables:
    HOST: ${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}
    K8S_NAMESPACE: ${CI_PROJECT_NAME}
    PRODUCTION: "true"
  environment:
    name: prod
    url: https://${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}
Deploy app (prod):
  extends: .autodevops_deploy_app_prod

#

.autodevops_create_azure_db_dev:
  extends:
    - .base_create_azure_db
  environment:
    name: ${CI_COMMIT_REF_NAME}-dev
Create Azure DB (dev):
  extends: .autodevops_create_azure_db_dev

#

.autodevops_drop_azure_db_dev:
  extends:
    - .base_drop_azure_db
  environment:
    name: ${CI_COMMIT_REF_NAME}-dev
    action: stop
Drop Azure DB (dev):
  extends: .autodevops_drop_azure_db_dev

#

.autodevops_delete_useless_k8s_namespaces:
  extends: .base_delete_useless_k8s_ns_stage
  environment:
    name: ${CI_COMMIT_REF_NAME}-dev
  variables:
    K8S_NAMESPACE_PREFIX: "${PROJECT}-${CI_PROJECT_ID}-review"
Delete useless k8s namespaces:
  extends: .autodevops_delete_useless_k8s_namespaces

#

.autodevops_notify_starting_deployment:
  extends: .base_notify_pending_stage
  stage: Deploy
  except:
    variables:
      - $NOTIFY_DISABLED
Notify Starting Deployment:
  extends: .autodevops_notify_starting_deployment

#

.notify_review:
  stage: Notify Finished Deployment
  dependencies:
    - Notify Starting Deployment
  except:
    refs:
      - tags
      - master
    variables:
      - $NOTIFY_DISABLED
  environment:
    name: ${CI_COMMIT_REF_NAME}-dev
    url: https://${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}
  before_script:
    - HOST="https://${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}"

.notify_prod:
  stage: Notify Finished Deployment
  only:
    refs:
      - master
  except:
    variables:
      - $NOTIFY_DISABLED
  dependencies:
    - Notify Starting Deployment
  environment:
    name: prod
    url: https://${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}
  before_script:
    - HOST="https://${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}"

.autodevops_notify_fail_review:
  extends:
    - .base_notify_fail_stage
    - .notify_review
Notify Fail (review):
  extends: .autodevops_notify_fail_review

.autodevops_notify_success_review:
  extends:
    - .base_notify_success_stage
    - .notify_review
Notify Success (review):
  extends: .autodevops_notify_success_review

.autodevops_notify_fail_prod:
  extends:
    - .base_notify_fail_stage
    - .notify_prod
Notify Fail (prod):
  extends: .autodevops_notify_fail_prod

.autodevops_notify_success_prod:
  extends:
    - .base_notify_success_stage
    - .notify_prod
Notify Success (prod):
  extends: .autodevops_notify_success_prod
