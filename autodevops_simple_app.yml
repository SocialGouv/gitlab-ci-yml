stages:
  - Install
  - Code Quality
  - Registration
  - Deploy
  - Notify Finished Deployment
  - Clean Up

include:
  - /base_create_namespace_stage.yml
  - /base_delete_useless_k8s_ns_stage.yml
  - /base_deploy_nodejs_chart_stage.yml
  - /base_docker_helm_image_stage.yml
  - /base_docker_kubectl_image_stage.yml
  - /base_notify_github_stage.yml
  - /base_register_stage.yml
  - /base_semantic_release_stage.yml
  - /base_yarn_stage.yml

#

Install:
  extends: .base_yarn_quality
  stage: Install
  image: node:13-alpine
  cache:
    key: "$CI_COMMIT_REF_NAME-$CI_JOB_NAME"
    paths:
      - .yarn
      - node_modules
  script:
    - yarn config set cache-folder $CI_PROJECT_DIR/.yarn
    - yarn --frozen-lockfile
  artifacts:
    expire_in: 1 day
    paths:
      - node_modules

Quality tests:
  dependencies:
    - Install
  image: node:13-alpine
  stage: Code Quality
  script:
    - yarn lint
    - yarn test

Build:
  stage: Code Quality
  image: node:13-alpine
  dependencies:
    - Install
  cache:
    key: "$CI_COMMIT_REF_NAME-$CI_JOB_NAME"
    paths:
      - .next/cache
  script:
    - yarn build
  artifacts:
    expire_in: 1 day
    paths:
      - .next

#

Release:
  extends: .base_semantic_release_stage
  stage: Registration

#

Register image:
  extends: .base_register_stage
  stage: Registration
  dependencies:
    - Build
  needs:
    - Build
  variables:
    CONTEXT: .
    DOCKERFILE_PATH: Dockerfile
    IMAGE_NAME: $CI_REGISTRY_IMAGE

#

Create namespace:
  extends: .base_create_namespace_stage
  only:
    refs:
      - branches
  except:
    refs:
      - tags
      - master

#

.deploy_app_stage:
  stage: Deploy
  extends: .base_deploy_nodejs_chart_stage
  image: registry.gitlab.com/gitlab-org/cluster-integration/auto-deploy-image:v0.8.3
  dependencies: []
  before_script:
    #
    - auto-deploy check_kube_domain
    - auto-deploy ensure_namespace
    - auto-deploy initialize_tiller
    - auto-deploy create_secret
    #
    # NOTE(douglasduteil): ensure to have `envsubst`
    - apk add gettext
  variables:
    REMOTE_URL: "https://github.com/${CI_PROJECT_PATH}.git"
    K8S_NAMESPACE: $KUBE_NAMESPACE
    REGISTRY: $CI_REGISTRY_IMAGE
    IMAGE_TAG: $CI_COMMIT_SHA
    CONTEXT: app

Deploy app (dev):
  extends:
    - .deploy_app_stage
  variables:
    HOST: $CI_PROJECT_PATH_SLUG-$CI_ENVIRONMENT_SLUG.$KUBE_INGRESS_BASE_DOMAIN
  environment:
    name: review/${CI_COMMIT_REF_NAME}-dev
    url: http://$CI_PROJECT_ID-$CI_ENVIRONMENT_SLUG.$KUBE_INGRESS_BASE_DOMAIN
    on_stop: Stop review

Stop review:
  image: registry.gitlab.com/gitlab-org/cluster-integration/auto-deploy-image:v0.8.3
  stage: Clean Up
  variables:
    GIT_STRATEGY: none
  script:
    - auto-deploy initialize_tiller
    - auto-deploy delete
  environment:
    name: review/${CI_COMMIT_REF_NAME}-dev
    action: stop
  when: manual
  allow_failure: true

Deploy app (prod):
  extends:
    - .deploy_app_stage
  only:
    - master
  environment:
    name: prod

#

Delete useless k8s namespaces:
  extends: .base_delete_useless_k8s_ns_stage

#

Notify Starting Deployment:
  extends: .base_notify_pending_stage
  stage: Deploy

Notify Fail:
  extends: .base_notify_fail_stage
  stage: Notify Finished Deployment
  dependencies:
    - Notify Starting Deployment
  before_script:
    - HOST=https://$CI_PROJECT_PATH_SLUG-$CI_ENVIRONMENT_SLUG.$KUBE_INGRESS_BASE_DOMAIN

Notify Success:
  extends: .base_notify_success_stage
  stage: Notify Finished Deployment
  dependencies:
    - Notify Starting Deployment
  before_script:
    - HOST=https://$CI_PROJECT_PATH_SLUG-$CI_ENVIRONMENT_SLUG.$KUBE_INGRESS_BASE_DOMAIN
